#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
#ifndef BRIDGEWELLSDK_SWIFT_H
#define BRIDGEWELLSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import PrebidMobile;
@import SafariServices;
@import UIKit;
@import WebKit;
#endif

#import <BridgewellSDK/BridgewellSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BridgewellSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class NSString;
@class ExternalUserId;
@class NSNumber;
@class WKWebView;
SWIFT_CLASS("_TtC13BridgewellSDK10Bridgewell")
@interface Bridgewell : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Bridgewell * _Nonnull shared;)
+ (Bridgewell * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nullable userHashedEmail;
@property (nonatomic, copy) NSString * _Nullable userHashedPhone;
@property (nonatomic) BOOL updatedTimeout;
@property (nonatomic, copy) NSString * _Nonnull bridgewellServerAccountId;
@property (nonatomic) BOOL bwPbsDebug;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull customRequestHeaders;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull cachedBidResponses;
/// This property is set by the developer when he is willing to assign the assetID for Native ad.
/// *
@property (nonatomic) BOOL shouldAssignNativeAssetID;
/// This property is set by the developer when he is willing to share the location for better ad targeting
/// *
@property (nonatomic) BOOL shareGeocoordinate;
/// Set the desidered verbosity of the logs
@property (nonatomic, strong) BwsLogLevel _Nonnull logLevel;
/// Enable print write log to file and print log message to console
/// note:
/// it is recommended to use it only while debugging, should not use it on when build release
@property (nonatomic) BOOL enableLogging;
/// Array  containing objects that hold External UserId parameters.
@property (nonatomic, copy) NSArray<ExternalUserId *> * _Nonnull externalUserIds;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull omsdkVersion;
@property (nonatomic, copy) NSString * _Nullable customStatusEndpoint;
@property (nonatomic) NSInteger timeoutMillis;
@property (nonatomic, strong) NSNumber * _Nullable timeoutMillisecondDynamic;
@property (nonatomic, copy) NSString * _Nullable cachedAuctionResponse;
@property (nonatomic) BOOL useCacheForReportWithRenderingAPI;
@property (nonatomic) NSTimeInterval creativeTimeout;
@property (nonatomic) NSTimeInterval creativeTimeoutPreRenderContent;
@property (nonatomic) BOOL useExternalClickThroughBrowser;
@property (nonatomic) enum PBMClickbrowserType implementedClickbrowserType;
@property (nonatomic) BOOL debugLogFileEnabled;
@property (nonatomic) BOOL isLocationUpdatesEnabled;
@property (nonatomic) BOOL isIncludeWinners;
@property (nonatomic) BOOL isIncludeBidderKeys;
- (BOOL)setCustomBridgewellServerWithUrl:(NSString * _Nonnull)url error:(NSError * _Nullable * _Nullable)error;
- (void)addStoredBidResponseWithBidder:(NSString * _Nonnull)bidder responseId:(NSString * _Nonnull)responseId;
- (void)clearStoredBidResponses;
- (NSArray<NSDictionary<NSString *, NSString *> *> * _Nullable)getStoredBidResponses SWIFT_WARN_UNUSED_RESULT;
- (void)addCustomHeaderWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value;
- (void)clearCustomHeaders;
/// Initializes BridgewellMobile SDK.
/// Checks the status of Bridgewell Server. The <code>customStatusEndpoint</code> property is used as server status endpoint.
/// If <code>customStatusEndpoint</code> property is not provided, the SDK will use default endpoint - <code>host</code> + <code>/status</code>.
/// The <code>host</code> value is obtained from <code>Bridgewell.shared.bridgewellServerHost</code>.
/// Checks the version of GMA SDK. If the version is not supported - logs warning.
/// Use this SDK initializer if you’re using Bridgewell SDK with GMA SDK.
/// \param gadMobileAdsObject GADMobileAds object
///
/// \param completion returns initialization status and optional error
///
+ (void)initializeSDK:(id _Nullable)gadMobileAdsObject :(void (^ _Nullable)(enum PrebidInitializationStatus, NSError * _Nullable))completion;
/// Initializes BridgewellMobile SDK.
/// Checks the status of Server. The <code>customStatusEndpoint</code> property is used as server status endpoint.
/// If <code>customStatusEndpoint</code> property is not provided, the SDK will use default endpoint - <code>host</code> + <code>/status</code>.
/// The <code>host</code> value is obtained from <code>Bridgewell.shared.bridgewellServerHost</code>.
/// Checks the version of GMA SDK. If the version is not supported - logs warning.
/// Use this SDK initializer if you’re using Bridgewell SDK with GMA SDK.
/// \param gadMobileAdsVersion GADMobileAds version string, use <code>GADGetStringFromVersionNumber(GADMobileAds.sharedInstance().versionNumber)</code> to get it
///
/// \param completion returns initialization status and optional error
///
+ (void)initializeSDKWithGadMobileAdsVersion:(NSString * _Nullable)gadMobileAdsVersion :(void (^ _Nullable)(enum PrebidInitializationStatus, NSError * _Nullable))completion;
/// Initializes BridgewellMobile SDK.
/// Checks the status of Server. The <code>customStatusEndpoint</code> property is used as server status endpoint.
/// If <code>customStatusEndpoint</code> property is not provided, the SDK will use default endpoint - <code>host</code> + <code>/status</code>.
/// The <code>host</code> value is obtained from <code>Bridgewell.shared.bridgewellServerHost</code>.
/// \param completion returns initialization status and optional error
///
+ (void)initializeSDK:(void (^ _Nullable)(enum PrebidInitializationStatus, NSError * _Nullable))completion;
/// Register WKWebview
/// Registers a web view with the Bridgewell SDK to improve in-app ad monetization of ads
/// within this web view. This version is non-blocking and will call window.onSdkDataReady
/// JavaScript function when all data is prepared.
- (void)registerContentWebViewWithAdInfo:(WKWebView * _Nonnull)webview;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AdFormat;
SWIFT_CLASS("_TtC13BridgewellSDK18BridgewellAdFormat")
@interface BridgewellAdFormat : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AdFormat * _Nonnull hybrid;)
+ (AdFormat * _Nonnull)hybrid SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC13BridgewellSDK22BridgewellViewExposure")
@interface BridgewellViewExposure : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC13BridgewellSDK29BridgewellViewExposureChecker")
@interface BridgewellViewExposureChecker : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC13BridgewellSDK9BwsAdSize")
@interface BwsAdSize : NSObject
@property (nonatomic, readonly) NSInteger width;
@property (nonatomic, readonly) NSInteger height;
@property (nonatomic, readonly) CGSize cgSize;
- (nonnull instancetype)initWithWidth:(NSInteger)width height:(NSInteger)height OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class BannerParameters;
@class VideoParameters;
@class BidResponse;
@protocol BwsAdViewDelegate;
@protocol BannerEventHandler;
@class NSCoder;
@class PBMORTBAppContent;
@class PBMORTBContentData;
@class UIViewController;
@class BannerView;
@class UIGestureRecognizer;
@class WKUserContentController;
@class WKScriptMessage;
@class WKNavigation;
@class SFSafariViewController;
SWIFT_CLASS("_TtC13BridgewellSDK9BwsAdView")
@interface BwsAdView : UIView <BannerViewDelegate, SFSafariViewControllerDelegate, UIGestureRecognizerDelegate, WKNavigationDelegate, WKScriptMessageHandler, WKUIDelegate>
@property (nonatomic, readonly, strong) BannerParameters * _Nonnull bannerParameters;
@property (nonatomic, readonly, strong) VideoParameters * _Nonnull videoParameters;
@property (nonatomic, readonly, strong) BidResponse * _Nullable lastBidResponse;
@property (nonatomic, readonly, copy) NSString * _Nonnull configID;
@property (nonatomic) NSTimeInterval refreshInterval;
@property (nonatomic, copy) NSArray<NSValue *> * _Nullable additionalSizes;
@property (nonatomic, strong) AdFormat * _Nonnull adFormat;
@property (nonatomic) enum PBMAdPosition adPosition;
@property (nonatomic, copy) NSString * _Nullable ortbConfig;
@property (nonatomic, weak) id <BwsAdViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame configID:(NSString * _Nonnull)configID adSize:(CGSize)adSize eventHandler:(id <BannerEventHandler> _Nonnull)eventHandler;
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID eventHandler:(id <BannerEventHandler> _Nonnull)eventHandler;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadAd;
- (void)setStoredAuctionResponseWithStoredAuction:(NSString * _Nonnull)storedAuction;
- (void)stopRefresh;
- (void)addExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeExtDataForKey:(NSString * _Nonnull)forKey;
- (void)clearExtData;
- (void)addExtKeyword:(NSString * _Nonnull)newElement;
- (void)addExtKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeExtKeyword:(NSString * _Nonnull)element;
- (void)clearExtKeywords;
- (void)setAppContent:(PBMORTBAppContent * _Nonnull)appContent;
- (void)clearAppContent;
- (void)addAppContentData:(NSArray<PBMORTBContentData *> * _Nonnull)dataObjects;
- (void)removeAppContentDataObject:(PBMORTBContentData * _Nonnull)dataObject;
- (void)clearAppContentDataObjects;
- (void)addUserData:(NSArray<PBMORTBContentData *> * _Nonnull)userDataObjects;
- (void)removeUserData:(PBMORTBContentData * _Nonnull)userDataObject;
- (void)clearUserData;
- (NSString * _Nullable)getAdTrackingURL SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getVideoBgTracking SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nullable)bannerViewPresentationController SWIFT_WARN_UNUSED_RESULT;
- (void)bannerView:(BannerView * _Nonnull)bannerView didReceiveAdWithAdSize:(CGSize)adSize;
- (void)handleTapOnVideo;
- (void)bannerView:(BannerView * _Nonnull)bannerView didFailToReceiveAdWith:(NSError * _Nonnull)error;
- (void)bannerViewWillLeaveApplication:(BannerView * _Nonnull)bannerView;
- (void)bannerViewWillPresentModal:(BannerView * _Nonnull)bannerView;
- (void)bannerViewDidDismissModal:(BannerView * _Nonnull)bannerView;
- (void)handleTapOnBackground;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)safariViewControllerDidFinish:(SFSafariViewController * _Nonnull)controller;
- (void)didTapOnAd;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

SWIFT_PROTOCOL("_TtP13BridgewellSDK17BwsAdViewDelegate_")
@protocol BwsAdViewDelegate <NSObject>
- (UIViewController * _Nullable)adViewPresentationController SWIFT_WARN_UNUSED_RESULT;
@optional
- (void)adViewDisplayed:(BwsAdView * _Nonnull)adView;
- (void)adViewFailed:(BwsAdView * _Nonnull)adView didFailToReceiveAdWith:(NSError * _Nonnull)error;
/// This optional method is triggered when the user clicks on an ad view.
/// \param adView The <code>BwsAdView</code> instance that was clicked. This provides context about the specific ad view being interacted with.
///
/// \param openUrl An optional <code>String</code> representing the destination URL of the ad. If <code>nil</code>, no specific URL is associated with the click.
///
/// \param linkOpenMethod A <code>String</code> indicating whether the destination URL should be opened externally (e.g., in a browser) or handled within the app.
/// <ul>
///   <li>
///     <code>true</code>: The URL is intended to be opened externally, such as in Safari.
///   </li>
///   <li>
///     <code>false</code>: The URL is meant to be handled internally, possibly within the app’s own web view.
///   </li>
/// </ul>
///
- (void)adViewClicked:(BwsAdView * _Nonnull)adView openUrl:(NSString * _Nullable)openUrl linkOpenMethod:(NSString * _Nullable)linkOpenMethod;
- (void)adViewClosed:(BwsAdView * _Nonnull)adView;
- (void)adViewDidDismissModal:(BwsAdView * _Nonnull)adView;
@end

SWIFT_CLASS("_TtC13BridgewellSDK11BwsBannerAd")
@interface BwsBannerAd : BwsAdView
- (nonnull instancetype)initWithFrame:(CGRect)frame configID:(NSString * _Nonnull)configID adSize:(CGSize)adSize throttleTimeSeconds:(NSInteger)throttleTimeSeconds SWIFT_DEPRECATED_MSG("Parametter adSide: CGSize is deprecated, use init function with BwsAdSize object instead", "BwsAdSize");
- (nonnull instancetype)initWithFrame:(CGRect)frame configID:(NSString * _Nonnull)configID bwsAdSize:(BwsAdSize * _Nonnull)bwsAdSize throttleTimeSeconds:(NSInteger)throttleTimeSeconds;
- (void)loadAd;
- (void)bannerView:(BannerView * _Nonnull)bannerView didReceiveAdWithAdSize:(CGSize)adSize;
@end

SWIFT_CLASS("_TtC13BridgewellSDK12BwsConstants")
@interface BwsConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull BWS_VERSION;)
+ (NSString * _Nonnull)BWS_VERSION SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC13BridgewellSDK17BwsMobileStickyAd")
@interface BwsMobileStickyAd : BwsAdView
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID bottomMargin:(CGFloat)bottomMargin from:(UIViewController * _Nonnull)vc;
- (void)loadAd;
@end

SWIFT_CLASS("_TtC13BridgewellSDK10BwsPopupAd")
@interface BwsPopupAd : BwsAdView
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID from:(UIViewController * _Nonnull)vc;
- (void)loadAd;
- (void)bannerView:(BannerView * _Nonnull)bannerView didReceiveAdWithAdSize:(CGSize)adSize;
@end

SWIFT_CLASS("_TtC13BridgewellSDK20BwsRightSideStickyAd")
@interface BwsRightSideStickyAd : BwsAdView
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID from:(UIViewController * _Nonnull)from bottomMargin:(CGFloat)bottomMargin;
- (void)loadAd;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
